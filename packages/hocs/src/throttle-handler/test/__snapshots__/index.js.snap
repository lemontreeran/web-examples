// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`throttleHandler display name should not wrap display name in production env 1`] = `
<ThrottleHandler>
  <Target
    undefined={[Function]}
  />
</ThrottleHandler>
`;

exports[`throttleHandler display name should wrap display name in non-production env 1`] = `
<throttleHandler(Target)>
  <Target
    undefined={[Function]}
  />
</throttleHandler(Target)>
`;

exports[`throttleHandler should call \`e.persist()\` if it has been passed 1`] = `
Array [
  Array [
    Object {
      "persist": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
    },
  ],
]
`;

exports[`throttleHandler should call \`e.persist()\` if it has been passed 2`] = `
Array [
  Array [],
]
`;

exports[`throttleHandler should call actual handler during lifecycle 1`] = `Array []`;

exports[`throttleHandler should call actual handler during lifecycle 2`] = `
Array [
  Array [
    undefined,
  ],
]
`;

exports[`throttleHandler should pass \`delay\` option to \`just-throttle\` via props 1`] = `
Array [
  Array [
    [Function],
    75,
    undefined,
  ],
]
`;

exports[`throttleHandler should pass \`interval\` option to \`just-throttle\` 1`] = `
Array [
  Array [
    [Function],
    75,
    undefined,
  ],
]
`;

exports[`throttleHandler should pass \`leadingCall\` option to \`just-throttle\` 1`] = `
Array [
  Array [
    [Function],
    75,
    true,
  ],
]
`;

exports[`throttleHandler should pass handler arguments through 1`] = `
Array [
  Array [
    undefined,
  ],
]
`;
